# https://www.codeeval.com/open_challenges/1/

# Players generally sit in a circle. The player designated to go first
# says the number "1", and each player thenceforth counts one number in
# turn. However, any number divisible by 'A' e.g. three is replaced by
# the word fizz and any divisible by 'B' e.g. five by the word buzz.
# Numbers divisible by both become fizz buzz. A player who hesitates or
# makes a mistake is either eliminated.

# Write a program that prints out the the pattern generated by such a
# scenario given the values of 'A'/'B' and 'N' which are read from an
# input text file. The input text file contains three space delimited
# numbers i.e. A, B, N. The program should then print out the final series
# of numbers using 'F' for fizz, 'B' for 'buzz' and 'FB' for fizz buzz.
# Input sample:

# Your program should read an input file (provided on the command line) which
# contains multiple newline separated lines. Each line will contain 3
# numbers which are space delimited. The first number is first number to
# divide by ('A' in this example), the second number is the second number
# to divide by ('B' in this example) and the third number is where you
# should count till ('N' in this example). You may assume that the input
# file is formatted correctly and is the numbers are valid positive integers.
# E.g.
# Output sample:

# Print out the series 1 through N replacing numbers divisible by 'A' by F,
# numbers divisible by 'B' by B and numbers divisible by both as 'FB'.
# Since the input file contains multiple sets of values, your output will
# print out one line per set. Ensure that there are no trailing empty spaces
# on each line you print. E.g.

# Constraints:
# The number of test cases <= 20
# "A" is in range [1, 20]
# "B" is in range [1, 20]
# "N" is in range [21, 100]


import sys


def fizzbuzz(a, b, n):
    out = []
    for i in xrange(1, n + 1):
        if not i % a and not i % b:
            out.append("FB")
        elif not i % a:
            out.append("F")
        elif not i % b:
            out.append("B")
        else:
            out.append(str(i))
    return " ".join(out)


if __name__ == "__main__":

    with open(sys.argv[1], 'r') as f:
        lines = f.readlines()
        for line in lines:
            a, b, n = line.split()
            print fizzbuzz(int(a), int(b), int(n))
